{"posts":[{"meta":{"title":"在 UIKit 中使用 SwiftUI","date":1659052800000,"tags":["SwiftUI","iOS"]},"summary":"<p><code class=\"codespan\">iOS13</code>首次推出了<code class=\"codespan\">SwiftUI</code>，当时<code class=\"codespan\">react</code>，<code class=\"codespan\">vue</code>这些声明式的前端框架已经火到爆，还有大神在造新的轮子，移动端也有<code class=\"codespan\">React-Native</code>，<code class=\"codespan\">Weex</code>，<code class=\"codespan\">Flutter</code>，<code class=\"codespan\">NativeScript</code>等也在搞声明式，不过他们的主要目标是跨平台。</p>\n<p><code class=\"codespan\">Apple</code>慌吗？慌吧？我觉得<code class=\"codespan\">Google</code>也慌。<code class=\"codespan\">2019年</code>苹果发布了<code class=\"codespan\">SwiftUI</code>，同年的<code class=\"codespan\">Google IO</code>上发布了<code class=\"codespan\">Compose Beta</code>，应该没商量过，不过也能看出来他俩挺着急的，首秀的自家框架超多<code class=\"codespan\">Bug</code>，管不了那么多了，<strong>先上线</strong>！</p>","isDraft":false,"url":"/blog/posts/tech/2022-07-29-SwiftUI-in-UIKit.md","name":"SwiftUI-in-UIKit"},{"meta":{"title":"制造一个 @PublishedObject","date":1659571200000,"tags":["SwiftUI","Combine"]},"summary":"<p>在<code class=\"codespan\">SwiftUI</code>中，<code class=\"codespan\">PropertyWrapper</code>随处可见。每种都有各自的职责，背后的逻辑和内存管理也有所不同。随着升级，<code class=\"codespan\">SwiftUI</code>也逐渐增加了一些新的<code class=\"codespan\">PropertyWrapper</code>，但实践中发现，有一种需求一直没有被满足，那就是<code class=\"codespan\">@PublishedObject</code>（根据<code class=\"codespan\">SwiftUI</code>的命名风格，我自己起的😅）。</p>","isDraft":false,"url":"/blog/posts/tech/2022-08-04-PublishedObject.md","name":"PublishedObject"}],"about":{"meta":{},"summary":"<h2 id=\"我自己\">我自己</h2>","isDraft":false,"url":"/blog/posts/about/about.md","name":"about"}}